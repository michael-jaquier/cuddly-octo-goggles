# Secret
apiVersion: v1
kind: Secret
metadata:
  name: # TODO: secret name
type: Opaque
stringData:
  username: # TODO: admin
  password: # TODO: supersecret
---
# Dummy imagePullSecret (for demo purposes)
# In real scenarios: kubectl create secret docker-registry regcred \
#   --docker-server=<server> --docker-username=<user> --docker-password=<pass>
apiVersion: v1
kind: Secret
metadata:
  name: regcred
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {"auths":{"https://index.docker.io/v1/":{"username":"dummy","password":"dummy","auth":"ZHVtbXk6ZHVtbXk="}}}
---
# Deployment using Secret
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-client
  template:
    metadata:
      labels:
        app: db-client
    spec:
      imagePullSecrets:
      - name: # TODO: regcred
      containers:
      - name: busybox
        image: busybox:1.36
        command: ["sh", "-c", "sleep 3600"]
        env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: # TODO: db-secret
              key: # TODO: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: # TODO: db-secret
              key: # TODO: password
        volumeMounts:
        - name: # TODO: secret-volume
          mountPath: # TODO: /etc/db
          readOnly: true
      volumes:
      - name: # TODO: secret-volume
        secret:
          secretName: # TODO: db-secret

# Quick create command:
# kubectl create secret generic db-secret --from-literal=username=admin --from-literal=password=supersecret
